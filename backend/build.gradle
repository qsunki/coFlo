plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id "com.diffplug.spotless" version "6.25.0"
}

allprojects {
    group = 'com.reviewping'
    version = '0.0.1-SNAPSHOT'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.diffplug.spotless'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }

        create 'mockitoAgent'
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

        // Spring
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-integration'
        implementation 'org.springframework.integration:spring-integration-redis'

        // Postgresql
        runtimeOnly 'org.postgresql:postgresql'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        mockitoAgent("org.mockito:mockito-core") {
            transitive = false
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
        jvmArgs "-javaagent:${configurations.mockitoAgent.asPath}"
    }

    spotless {
        format 'misc', {
            target '*.gradle'
            trimTrailingWhitespace()
            indentWithSpaces(4)
            endWithNewline()
        }
        java {
            targetExclude 'src/main/generated/**/*.java' // generated 디렉토리 제외
            palantirJavaFormat()
        }
    }
}

